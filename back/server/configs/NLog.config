<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets>

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Write events to a file with the date in the filename.
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->

    <target xsi:type="File" name="MainLogFile"
            fileName="../logs/meridian-mvc-main-${environment:HOSTNAME}-${date:format=yyyy-MM-dd-HH-mm-ss-ffff:universalTime=true:cached=true}.log"
            layout="${longdate:universalTime=true} ${pad:padding=5:fixedlength=true:${level:uppercase=true}} ${threadid} ${threadname} ${logger} ${message} ${exception:format=tostring}"
            archiveFileName="../logs/meridian-mvc-main-${environment:HOSTNAME}-${date:format=yyyy-MM-dd-HH-mm-ss-ffff:universalTime=true:cached=true}.{#}.log"
            archiveAboveSize="52428800"
            archiveNumbering = "Sequence"
            ArchiveOldFileOnStartup = "true"
            keepFileOpen = "true">
        <header>Meridian .NET version: ${meridian-net-version}
Target framework version: ${target-framework-version}
      </header>
    </target>

    <target xsi:type="File" name="IndexationLogFile"
            fileName="../logs/indexation/indexation-${environment:HOSTNAME}-${date:format=yyyy-MM-dd-HH-mm-ss-ffff:universalTime=true:cached=true}.log"
            layout="${longdate:universalTime=true} ${pad:padding=5:fixedlength=true:${level:uppercase=true}} ${threadid} ${threadname} ${logger} ${message} ${exception:format=tostring}"
            archiveFileName="../logs/indexation/indexation-${environment:HOSTNAME}-${date:format=yyyy-MM-dd-HH-mm-ss-ffff:universalTime=true:cached=true}.{#}.log"
            archiveAboveSize="52428800"
            archiveNumbering = "Sequence"
            ArchiveOldFileOnStartup = "true"
            keepFileOpen = "true">
      <header>Meridian .NET version: ${meridian-net-version}
Target framework version: ${target-framework-version}
      </header>
    </target>

    <target xsi:type="File" name="SensitiveDataLogFile"
            fileName="../logs/sensitive_data/sensitive_data-${environment:HOSTNAME}-${date:format=yyyy-MM-dd-HH-mm-ss-ffff:universalTime=true:cached=true}.log"
            layout="${longdate:universalTime=true} ${pad:padding=5:fixedlength=true:${level:uppercase=true}} ${threadid} ${threadname} ${logger} ${message} ${exception:format=tostring}"
            archiveFileName="../logs/sensitive_data/sensitive_data-${environment:HOSTNAME}-${date:format=yyyy-MM-dd-HH-mm-ss-ffff:universalTime=true:cached=true}.{#}.log"
            archiveAboveSize="52428800"
            archiveNumbering = "Sequence"
            ArchiveOldFileOnStartup = "true"
            keepFileOpen = "true">
      <header>Meridian .NET version: ${meridian-net-version}
Target framework version: ${target-framework-version}
      </header>
    </target>

    <target xsi:type="File" name="BackgroundJobLogFile"
            fileName="../logs/background_jobs/${logger}-${environment:HOSTNAME}-${date:format=yyyy-MM-dd-HH-mm-ss-ffff:universalTime=true:cached=true}.log"
            layout="${longdate:universalTime=true} ${pad:padding=5:fixedlength=true:${level:uppercase=true}} ${threadid} ${threadname} ${logger} ${message} ${exception:format=tostring}"
            archiveFileName="../logs/background_jobs/background_jobs-${environment:HOSTNAME}-${date:format=yyyy-MM-dd-HH-mm-ss-ffff:universalTime=true:cached=true}.{#}.log"
            archiveAboveSize="52428800"
            archiveNumbering = "Sequence"
            ArchiveOldFileOnStartup = "true"
            keepFileOpen = "true">
      <header>
        Meridian .NET version: ${meridian-net-version}
        Target framework version: ${target-framework-version}
      </header>
    </target>

    <target xsi:type="ColoredConsole" name="MainLogConsole"
            layout="${pad:padding=5:fixedlength=true:${level:uppercase=true}} ${threadid} ${threadname} ${logger} ${message} ${exception:format=tostring}">
      <header>Meridian .NET version: ${meridian-net-version}
Target framework version: ${target-framework-version}
      </header>
    </target>
  </targets>

  <rules>
    <logger name="Microsoft.AspNetCore.Hosting.Diagnostics"
            final="true"
            level="Info">
      <filter type="when"
              condition="contains('${aspnet-request-url}', '/health')"
              action="Ignore" />
      <filter type="when"
              condition="contains('${aspnet-request-url}', '/metrics')"
              action="Ignore" />
    </logger>
    <logger name="Microsoft.AspNetCore.Routing.EndpointMiddleware"
            final="true"
            level="Info">
      <filter type="when"
              condition="contains('${aspnet-request-url}', '/health')"
              action="Ignore" />
      <filter type="when"
              condition="contains('${aspnet-request-url}', '/metrics')"
              action="Ignore" />
    </logger>

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->

    <logger name="IndexationLogger" minlevel="Error" writeTo="IndexationLogFile" final="true" />
    <logger name="SensitiveDataLogger" minlevel="Error" writeTo="SensitiveDataLogFile" final="true" />
    <logger name="BackgroundJobLogger" minlevel="Error" writeTo="BackgroundJobLogFile" final="true" />
    <logger name="BackgroundJobLogger-*" minlevel="Error" writeTo="BackgroundJobLogFile" final="true" />

    <logger name="*" minlevel="Error" writeTo="MainLogFile" />
    <logger name="*" minlevel="Debug" writeTo="MainLogConsole" />
  </rules>
</nlog>
